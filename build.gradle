plugins {
  id 'java'
  id 'application'
}

version = '0.0.1'

mainClassName = 'litresbot.Application'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileJava.options.encoding = 'UTF-8'

repositories {
  mavenCentral()
}

dependencies {
  implementation group: 'log4j', name: 'log4j', version: '1.2.17'
  implementation group: 'org.telegram', name: 'telegrambots', version: '6.1.0'
  implementation group: 'org.jetbrains', name: 'annotations', version: '23.0.0'
  implementation group: 'org.jdom', name: 'jdom2', version: '2.0.6.1'
  implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
  implementation group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.15'

  // testing
  testImplementation group: 'junit', name: 'junit', version: '4.13.2'

  // telegrambots dependency
  implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
  implementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.36'
}

def generatedVersionDir = "${buildDir}/generated-version"

sourceSets {
    main {
        output.dir(generatedVersionDir, builtBy: 'generateVersionProperties')
    }
}

task generateVersionProperties {
    doLast {
        def propertiesFile = file "$generatedVersionDir/version.properties"
        propertiesFile.parentFile.mkdirs()
        def properties = new Properties()
        properties.setProperty('version', rootProject.version.toString())
        propertiesFile.withWriter { properties.store(it, null) }
    }
}
processResources.dependsOn generateVersionProperties